<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:macro name="pm_robot_ros2_control_hw_sim" params="name initial_positions_file">

                <!-- Loading of the Robot bringup config -->
                <xacro:if value="${launch_mode == 'sim_HW'}">
                    <xacro:property name="pm_robot_bringup_config_file" value="$(find pm_robot_bringup)/config/pm_robot_bringup_config.yaml" />
                </xacro:if>               
                <xacro:property name="current_pm_robot_bringup_config" value="${xacro.load_yaml(pm_robot_bringup_config_file)}"/>
        
        <xacro:property name="initial_positions" value="${load_yaml(initial_positions_file)['initial_positions']}"/>

        <ros2_control name="GazeboSystem" type="system">
            <hardware>
                <plugin>gazebo_ros2_control/GazeboSystem</plugin>
            </hardware>

            <joint name="X_Axis_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="Y_Axis_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="Z_Axis_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="T_Axis_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="1K_Dispenser_Flap_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="1K_Dispenser_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="2K_Dispenser_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="Gonio_Right_Stage_1_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="Gonio_Right_Stage_2_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="Camera_Calibration_Platelet_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="Gonio_Left_Stage_1_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="Gonio_Left_Stage_2_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="UV_Slider_X_Front_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="UV_LED_Front_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="UV_Slider_X_Back_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="UV_LED_Back_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>
            <joint name="Calibration_Qube_Joint">
                <command_interface name="position">
                </command_interface>
                <state_interface name="position"/>
            </joint>

            <!-- If parallel gripper with two jaws is selected -->
            <xacro:if value="${current_pm_robot_bringup_config['pm_robot_tools']['pm_robot_tool_parallel_gripper_2_jaws']['use_paralell_gripper']}">
                
                <joint name="Tool_Parallel_Gripper_Jaw_1_Joint">
                    <command_interface name="position">
                    </command_interface>
                    <state_interface name="position"/>
                    <state_interface name="velocity"/>
                </joint>

               <joint name="Tool_Parallel_Gripper_Jaw_2_Joint">
                    <command_interface name="position">
                    </command_interface>
                    <state_interface name="position"/>
                    <state_interface name="velocity"/>
                </joint>

                <!-- <joint name="Tool_Parallel_Gripper_Jaw_2_Joint">
                    <param name="mimic">Tool_Parallel_Gripper_Jaw_1_Joint</param>
                    <param name="mulltiplier">1</param>
                    <command_interface name="position">
                    </command_interface>
                    <state_interface name="position"/>
                    <state_interface name="velocity"/>
                </joint> -->
            </xacro:if>

            <!-- If parallel gripper with one jaw is selected -->
            <xacro:if value="${current_pm_robot_bringup_config['pm_robot_tools']['pm_robot_tool_parallel_gripper_1_jaw']['use_paralell_gripper']}">
                <joint name="Tool_Parallel_Gripper_Jaw_Joint">
                    <command_interface name="position">
                    </command_interface>
                    <state_interface name="position"/>
                    <state_interface name="velocity"/>
                </joint>
            </xacro:if>


        </ros2_control>

        <gazebo>
            <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
                <parameters>$(find pm_robot_description)/config/pm_robot_control_sim_HW.yaml</parameters>
                <parameters>$(find pm_robot_description)/config/pm_robot_control_gonio_right_sim_HW.yaml</parameters>
                <parameters>$(find pm_robot_description)/config/pm_robot_control_gonio_left_sim_HW.yaml</parameters>

                <!-- <xacro:if value="$(arg with_Tool_MPG_10)">
                    <parameters>$(find pm_robot_description)/config/pm_robot_control_gripper_sim_HW.yaml</parameters>
                </xacro:if> -->

                <!--robot_param>robot_description</robot_param-->                <!--The location of the robot_description (URDF) on the parameter server, defaults to robot_description-->
                <!--robot_param_node>robot_state_publisher</robot_param_node-->                <!-- Name of the node where the robot_param is located, defauls to robot_state_publisher-->
                <!--robotNamespace>${arm_id}</robotNamespace-->
            </plugin>
        </gazebo>
    </xacro:macro>
</robot>
